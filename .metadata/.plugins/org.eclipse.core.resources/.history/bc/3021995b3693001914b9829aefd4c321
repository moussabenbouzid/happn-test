package fr.happn.poi;

import static org.junit.Assert.assertEquals;

import java.io.File;
import java.nio.file.Path;
import java.nio.file.Paths;
import java.util.List;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.test.context.SpringBootTest;
import org.springframework.mock.web.MockHttpServletRequest;
import org.springframework.mock.web.MockHttpServletResponse;
import org.springframework.mock.web.MockMultipartFile;
import org.springframework.test.context.junit4.SpringRunner;
import org.springframework.web.multipart.MultipartFile;

import fr.happn.poi.controller.PoiController;
import fr.happn.poi.model.Poi;

@RunWith(SpringRunner.class)
@SpringBootTest
public class PoiProjectApplicationTests {
	
	@Autowired
	PoiController poictrl;

	@Test
	public void contextLoads() {
		HttpServletRequest request = new MockHttpServletRequest();
		HttpServletResponse response = new MockHttpServletResponse();
		//byte[] data = (new String("data")).getBytes();
		File file = new File("src/main/resources/static/poi.tsv");
		  //init array with file length
		Path currentRelativePath = Paths.get("");
		String s = currentRelativePath.toAbsolutePath().toString();
		System.out.println("Current relative path is: " + s);
		System.out.println("mon file " + fie);
		System.out.println("mon length " + file.length());
		byte[] bytesArray = new byte[(int) file.length()];
	    MultipartFile multipart;
	    multipart =  new MockMultipartFile("csvFile", "poi.tsv", null, bytesArray);
	    List<Poi> pois = poictrl.parsePoi(multipart, request, response);
		assertEquals("test", "test");
	}

}
